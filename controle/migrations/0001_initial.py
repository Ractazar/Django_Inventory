# Generated by Django 5.2.1 on 2025-05-16 19:28

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notebooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('processador', models.CharField(max_length=100)),
                ('memoria_ram', models.CharField(max_length=100)),
                ('sistema_operacional', models.CharField(max_length=100)),
                ('memoria_interna', models.CharField(max_length=100)),
                ('id_dispositivo', models.CharField(max_length=100, unique=True)),
                ('id_produto', models.CharField(max_length=100)),
                ('numero_serie', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('Estoque', 'Estoque'), ('Em Uso', 'Em Uso'), ('Manutenção', 'Manutenção')], max_length=10)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('criado_por', models.CharField(max_length=100)),
                ('modificado_por', models.CharField(blank=True, max_length=100, null=True)),
                ('emprestado', models.CharField(default='Não', max_length=100)),
                ('ultimo_comeco_manutencao', models.DateTimeField(blank=True, null=True)),
                ('ultimo_final_manutencao', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, unique=True)),
                ('senha', models.CharField(max_length=100)),
                ('versao', models.CharField(max_length=100)),
                ('data_renovacao', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Smartphones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('numero_serie', models.CharField(max_length=100, unique=True)),
                ('numero_chip', models.CharField(max_length=100, null=True)),
                ('imei_1', models.CharField(max_length=100, unique=True)),
                ('imei_2', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(choices=[('Estoque', 'Estoque'), ('Em Uso', 'Em Uso'), ('Manutenção', 'Manutenção')], max_length=10)),
                ('capa_protetora', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3)),
                ('carregador', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=3)),
                ('criado_por', models.CharField(max_length=100)),
                ('modificado_por', models.CharField(blank=True, max_length=100, null=True)),
                ('emprestado', models.CharField(default='Não', max_length=100)),
                ('ultimo_comeco_manutencao', models.DateTimeField(blank=True, null=True)),
                ('ultimo_final_manutencao', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('documento', models.FileField(upload_to='documentos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuarios',
            },
        ),
    ]
